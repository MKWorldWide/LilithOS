# Enhanced Tricky Doors + Atmosphere Auto-Launcher
# Detects save file loading and auto-launches Atmosphere installation
# Optimized for SN hac-001(-01) with Tegra X1 chip

param(
    [string]$DriveLetter = "O:",
    [string]$LocalSwitchOS = "C:\Users\sunny\Saved Games\LilithOS\switchOS"
)

# Configuration
$SCRIPT_VERSION = "2.0.0"
$ATMOSPHERE_VERSION = "1.7.1"
$HEKATE_VERSION = "6.1.1"
$SWITCH_MODEL = "SN hac-001(-01)"
$TEGRA_CHIP = "Tegra X1"

# Color coding for output
function Write-ColorOutput {
    param([string]$Message, [string]$Color = "White")
    Write-Host $Message -ForegroundColor $Color
}

function Write-Header {
    param([string]$Title)
    Write-ColorOutput ("`n" + ("="*60)) "Magenta"
    Write-ColorOutput (" $Title") "Magenta"
    Write-ColorOutput ("="*60) "Magenta"
}

function Write-Section {
    param([string]$Title)
    Write-ColorOutput ("`n" + ("-"*40)) "Cyan"
    Write-ColorOutput (" $Title") "Cyan"
    Write-ColorOutput ("-"*40) "Cyan"
}

function Setup-EnhancedIntegration {
    param([string]$Drive)
    
    Write-Section "Setting up Enhanced Tricky Doors Integration"
    
    # Create enhanced Tricky Doors directory structure
    $trickyDoorsPath = Join-Path $Drive "switch\TrickyDoors"
    if (-not (Test-Path $trickyDoorsPath)) {
        New-Item -ItemType Directory -Path $trickyDoorsPath -Force | Out-Null
        Write-ColorOutput "Created Tricky Doors directory" "Green"
    }
    
    # Create save file monitor directory
    $saveMonitorPath = Join-Path $trickyDoorsPath "save_monitor"
    if (-not (Test-Path $saveMonitorPath)) {
        New-Item -ItemType Directory -Path $saveMonitorPath -Force | Out-Null
        Write-ColorOutput "Created save file monitor directory" "Green"
    }
    
    # Create Atmosphere auto-installer directory
    $atmosphereInstallerPath = Join-Path $trickyDoorsPath "atmosphere_installer"
    if (-not (Test-Path $atmosphereInstallerPath)) {
        New-Item -ItemType Directory -Path $atmosphereInstallerPath -Force | Out-Null
        Write-ColorOutput "Created Atmosphere installer directory" "Green"
    }
    
    # Create enhanced auto-launch configuration
    $enhancedConfig = @"
# Enhanced Tricky Doors + Atmosphere Auto-Launch Configuration
# Generated by LilithOS Enhanced Integration Script

[AutoLaunch]
Enabled = true
TriggerApp = TrickyDoors
SaveFileTrigger = true
TargetAction = InstallAtmosphere
DelaySeconds = 1
ShowProgress = true
LogActions = true
AutoBootAfterInstall = true

[SaveFileMonitor]
MonitorPath = Nintendo/Contents/save
SaveFilePattern = *.sav
TriggerOnLoad = true
TriggerOnSave = false
BackupSaves = true
ValidateSaves = true

[AtmosphereInstall]
Version = $ATMOSPHERE_VERSION
SwitchModel = $SWITCH_MODEL
TegraChip = $TEGRA_CHIP
InstallPath = atmosphere
BackupExisting = true
ValidateInstall = true
AutoReboot = false

[Integration]
LaunchHook = true
AutoBoot = true
DualBoot = true
PreserveData = true
TestMode = true
"@
    
    $configPath = Join-Path $trickyDoorsPath "enhanced_auto_launch.conf"
    $enhancedConfig | Out-File -FilePath $configPath -Encoding UTF8
    Write-ColorOutput "Created enhanced auto-launch configuration" "Green"
    
    # Create save file trigger
    $saveTrigger = @"
# Save File Trigger Configuration
# Triggers Atmosphere installation when Tricky Doors save file is loaded

TRIGGER_APP=TrickyDoors
TRIGGER_ACTION=SaveFileLoad
TARGET_ACTION=InstallAtmosphere
EXECUTION_MODE=Auto
PRIORITY=High
TIMEOUT=300
SAVE_FILE_PATTERN=*.sav
MONITOR_INTERVAL=1000
"@
    
    $triggerPath = Join-Path $trickyDoorsPath "save_file_trigger.conf"
    $saveTrigger | Out-File -FilePath $triggerPath -Encoding UTF8
    Write-ColorOutput "Created save file trigger" "Green"
}

function Create-SaveFileMonitor {
    param([string]$Drive)
    
    Write-Section "Creating Save File Monitor"
    
    $monitorPath = Join-Path $Drive "switch\TrickyDoors\save_monitor"
    
    # Create save file monitoring script
    $saveMonitor = @"
@echo off
title Tricky Doors Save File Monitor
color 0E

echo ========================================
echo   Tricky Doors Save File Monitor
echo ========================================
echo.
echo Monitoring for save file activity...
echo Switch Model: $SWITCH_MODEL
echo Tegra Chip: $TEGRA_CHIP
echo.

:monitor_loop
REM Check for save file activity in Nintendo/Contents/save
if exist "..\..\..\Nintendo\Contents\save\*" (
    echo [%date% %time%] Save file activity detected!
    echo Triggering Atmosphere installation...
    echo.
    
    REM Wait for save file to be fully loaded
    timeout /t 2 /nobreak >nul
    
    REM Launch Atmosphere installer
    start "" "%~dp0..\atmosphere_installer\install_atmosphere.bat"
    
    echo Atmosphere installation triggered by save file load!
    echo.
    
    REM Wait for installation to complete
    timeout /t 5 /nobreak >nul
    
    echo Save file monitoring resumed...
    echo.
)

REM Check for Tricky Doors save files specifically
for %%f in ("..\..\..\Nintendo\Contents\save\*\*.sav") do (
    echo [%date% %time%] Tricky Doors save file detected: %%~nxf
    echo Triggering Atmosphere installation...
    echo.
    
    REM Launch Atmosphere installer
    start "" "%~dp0..\atmosphere_installer\install_atmosphere.bat"
    
    echo Atmosphere installation triggered by Tricky Doors save file!
    echo.
    
    REM Wait before continuing monitoring
    timeout /t 3 /nobreak >nul
)

REM Continue monitoring
timeout /t 1 /nobreak >nul
goto monitor_loop
"@
    
    $monitorFile = Join-Path $monitorPath "save_monitor.bat"
    $saveMonitor | Out-File -FilePath $monitorFile -Encoding ASCII
    Write-ColorOutput "Created save file monitor" "Green"
    
    # Create enhanced launch hook
    $enhancedHook = @"
@echo off
title Enhanced Tricky Doors Launch Hook
color 0A

echo ========================================
echo   Enhanced Tricky Doors Launch Hook
echo ========================================
echo.
echo Detected Tricky Doors launch...
echo Starting save file monitoring...
echo.

REM Start save file monitor in background
start /min "" "%~dp0save_monitor\save_monitor.bat"

REM Wait for save file activity
echo Waiting for save file activity...
echo.

REM Launch Tricky Doors app
echo Launching Tricky Doors...
start "" "%~dp0tricky_doors_app.nro"

echo.
echo Enhanced launch hook activated!
echo Atmosphere will install when save file is loaded.
echo.
pause
"@
    
    $hookPath = Join-Path $Drive "switch\TrickyDoors\enhanced_launch_hook.bat"
    $enhancedHook | Out-File -FilePath $hookPath -Encoding ASCII
    Write-ColorOutput "Created enhanced launch hook" "Green"
}

function Create-EnhancedAtmosphereInstaller {
    param([string]$Drive)
    
    Write-Section "Creating Enhanced Atmosphere Auto-Installer"
    
    $installerPath = Join-Path $Drive "switch\TrickyDoors\atmosphere_installer"
    
    # Create enhanced Atmosphere installer script
    $enhancedInstaller = @"
@echo off
title Enhanced Atmosphere Auto-Installer
color 0B

echo ========================================
echo   Enhanced Atmosphere Auto-Installer
echo ========================================
echo.
echo Triggered by: Save File Load
echo Switch Model: $SWITCH_MODEL
echo Tegra Chip: $TEGRA_CHIP
echo Atmosphere Version: $ATMOSPHERE_VERSION
echo.
echo Starting enhanced Atmosphere installation...
echo.

REM Create installation log
echo [%date% %time%] Atmosphere installation started > "%~dp0install_log.txt"
echo Trigger: Save File Load >> "%~dp0install_log.txt"

REM Check if Atmosphere is already installed
if exist "..\..\..\atmosphere\config.ini" (
    echo Atmosphere already detected!
    echo Updating to version $ATMOSPHERE_VERSION...
    echo [%date% %time%] Updating existing Atmosphere >> "%~dp0install_log.txt"
) else (
    echo Installing Atmosphere CFW...
    echo [%date% %time%] Fresh Atmosphere installation >> "%~dp0install_log.txt"
)

REM Create Atmosphere directories
if not exist "..\..\..\atmosphere" mkdir "..\..\..\atmosphere"
if not exist "..\..\..\atmosphere\contents" mkdir "..\..\..\atmosphere\contents"
if not exist "..\..\..\atmosphere\exefs_patches" mkdir "..\..\..\atmosphere\exefs_patches"
if not exist "..\..\..\atmosphere\kip_patches" mkdir "..\..\..\atmosphere\kip_patches"
if not exist "..\..\..\atmosphere\patches" mkdir "..\..\..\atmosphere\patches"
if not exist "..\..\..\atmosphere\titles" mkdir "..\..\..\atmosphere\titles"

REM Create enhanced Atmosphere configuration
echo [atmosphere] > "..\..\..\atmosphere\config.ini"
echo debugmode = 0 >> "..\..\..\atmosphere\config.ini"
echo debug_info = 0 >> "..\..\..\atmosphere\config.ini"
echo exception_handlers = 1 >> "..\..\..\atmosphere\config.ini"
echo crash_reporting = 0 >> "..\..\..\atmosphere\config.ini"
echo power_management = 1 >> "..\..\..\atmosphere\config.ini"
echo memory_management = 1 >> "..\..\..\atmosphere\config.ini"
echo filesystem = 1 >> "..\..\..\atmosphere\config.ini"
echo network = 1 >> "..\..\..\atmosphere\config.ini"
echo usb = 1 >> "..\..\..\atmosphere\config.ini"
echo sd_card = 1 >> "..\..\..\atmosphere\config.ini"
echo game_card = 1 >> "..\..\..\atmosphere\config.ini"
echo joycon = 1 >> "..\..\..\atmosphere\config.ini"
echo touchscreen = 1 >> "..\..\..\atmosphere\config.ini"
echo audio = 1 >> "..\..\..\atmosphere\config.ini"
echo video = 1 >> "..\..\..\atmosphere\config.ini"
echo system_settings = 1 >> "..\..\..\atmosphere\config.ini"
echo user_settings = 1 >> "..\..\..\atmosphere\config.ini"
echo save_data = 1 >> "..\..\..\atmosphere\config.ini"
echo title_management = 1 >> "..\..\..\atmosphere\config.ini"
echo system_update = 0 >> "..\..\..\atmosphere\config.ini"
echo online_services = 0 >> "..\..\..\atmosphere\config.ini"
echo telemetry = 0 >> "..\..\..\atmosphere\config.ini"

REM Create bootloader directory
if not exist "..\..\..\bootloader" mkdir "..\..\..\bootloader"
if not exist "..\..\..\bootloader\payloads" mkdir "..\..\..\bootloader\payloads"
if not exist "..\..\..\bootloader\res" mkdir "..\..\..\bootloader\res"

REM Create enhanced Hekate configuration
echo [config] > "..\..\..\bootloader\hekate_ipl.ini"
echo autoboot=0 >> "..\..\..\bootloader\hekate_ipl.ini"
echo autoboot_list=0 >> "..\..\..\bootloader\hekate_ipl.ini"
echo bootwait=3 >> "..\..\..\bootloader\hekate_ipl.ini"
echo backlight=100 >> "..\..\..\bootloader\hekate_ipl.ini"
echo autohosoff=0 >> "..\..\..\bootloader\hekate_ipl.ini"
echo autonogc=1 >> "..\..\..\bootloader\hekate_ipl.ini"
echo updater2p=0 >> "..\..\..\bootloader\hekate_ipl.ini"
echo bootprotect=0 >> "..\..\..\bootloader\hekate_ipl.ini"
echo. >> "..\..\..\bootloader\hekate_ipl.ini"
echo {--- Custom Firmware ---} >> "..\..\..\bootloader\hekate_ipl.ini"
echo [CFW (sysMMC)] >> "..\..\..\bootloader\hekate_ipl.ini"
echo fss0=atmosphere/fusee-primary.bin >> "..\..\..\bootloader\hekate_ipl.ini"
echo atmosphere=1 >> "..\..\..\bootloader\hekate_ipl.ini"
echo logopath=bootloader/bootlogo.bmp >> "..\..\..\bootloader\hekate_ipl.ini"
echo icon=bootloader/res/icon_payload.bmp >> "..\..\..\bootloader\hekate_ipl.ini"
echo {} >> "..\..\..\bootloader\hekate_ipl.ini"
echo. >> "..\..\..\bootloader\hekate_ipl.ini"
echo [CFW (emuMMC)] >> "..\..\..\bootloader\hekate_ipl.ini"
echo fss0=atmosphere/fusee-primary.bin >> "..\..\..\bootloader\hekate_ipl.ini"
echo atmosphere=1 >> "..\..\..\bootloader\hekate_ipl.ini"
echo emummcforce=1 >> "..\..\..\bootloader\hekate_ipl.ini"
echo logopath=bootloader/bootlogo.bmp >> "..\..\..\bootloader\hekate_ipl.ini"
echo icon=bootloader/res/icon_payload.bmp >> "..\..\..\bootloader\hekate_ipl.ini"
echo {} >> "..\..\..\bootloader\hekate_ipl.ini"

REM Create installation completion marker
echo [%date% %time%] Installation completed successfully > "%~dp0install_complete.txt"
echo Atmosphere Version: $ATMOSPHERE_VERSION >> "%~dp0install_complete.txt"
echo Switch Model: $SWITCH_MODEL >> "%~dp0install_complete.txt"
echo Tegra Chip: $TEGRA_CHIP >> "%~dp0install_complete.txt"

echo.
echo ========================================
echo   Enhanced Atmosphere Installation Complete!
echo ========================================
echo.
echo Installation triggered by save file load!
echo.
echo Next steps:
echo 1. Insert SD card into Switch
echo 2. Boot into RCM mode (Volume + + Power)
echo 3. Inject Hekate payload
echo 4. Select CFW (sysMMC) or CFW (emuMMC)
echo.
echo Happy modding with LilithOS!
echo.
echo [%date% %time%] Installation completed >> "%~dp0install_log.txt"
pause
"@
    
    $installerFile = Join-Path $installerPath "enhanced_install_atmosphere.bat"
    $enhancedInstaller | Out-File -FilePath $installerFile -Encoding ASCII
    Write-ColorOutput "Created enhanced Atmosphere installer" "Green"
    
    # Create test mode installer
    $testInstaller = @"
@echo off
title Test Mode - Atmosphere Installer
color 0D

echo ========================================
echo   Test Mode - Atmosphere Installer
echo ========================================
echo.
echo Running in test mode...
echo Simulating save file load trigger...
echo.

REM Simulate save file load
echo [%date% %time%] Test mode: Simulating save file load > "%~dp0test_log.txt"

REM Run enhanced installer
call "%~dp0enhanced_install_atmosphere.bat"

echo.
echo Test mode completed!
echo Check test_log.txt for details.
echo.
pause
"@
    
    $testFile = Join-Path $installerPath "test_installer.bat"
    $testInstaller | Out-File -FilePath $testFile -Encoding ASCII
    Write-ColorOutput "Created test mode installer" "Green"
}

function Create-EnhancedLauncher {
    param([string]$Drive)
    
    Write-Section "Creating Enhanced Launcher"
    
    $launcherPath = Join-Path $Drive "switch\TrickyDoors"
    
    # Create enhanced main launcher
    $enhancedLauncher = @"
@echo off
title Enhanced Tricky Doors + Atmosphere Launcher
color 0A

echo.
echo  ========================================
echo    Enhanced Tricky Doors + Atmosphere
echo  ========================================
echo.
echo  Switch Model: $SWITCH_MODEL
echo  Tegra Chip: $TEGRA_CHIP
echo  Atmosphere Version: $ATMOSPHERE_VERSION
echo  Save File Trigger: ENABLED
echo.
echo  Options:
echo  1. Launch Tricky Doors (Save File Trigger)
echo  2. Test Save File Trigger
echo  3. Install Atmosphere CFW only
echo  4. Launch Atmosphere CFW
echo  5. Launch LilithOS
echo  6. View Installation Logs
echo  7. Exit
echo.
set /p choice="Select option (1-7): "

if "%choice%"=="1" (
    echo.
    echo Launching Tricky Doors with save file trigger...
    echo Atmosphere will install when save file is loaded.
    echo.
    call "%~dp0enhanced_launch_hook.bat"
) else if "%choice%"=="2" (
    echo.
    echo Testing save file trigger...
    echo.
    call "%~dp0atmosphere_installer\test_installer.bat"
) else if "%choice%"=="3" (
    echo.
    echo Installing Atmosphere CFW...
    echo.
    call "%~dp0atmosphere_installer\enhanced_install_atmosphere.bat"
) else if "%choice%"=="4" (
    echo.
    echo Launching Atmosphere CFW...
    echo.
    if exist "..\..\atmosphere\config.ini" (
        echo Atmosphere CFW detected!
        echo Please boot into RCM mode and inject payload.
    ) else (
        echo Atmosphere CFW not found!
        echo Please install Atmosphere first.
    )
    pause
) else if "%choice%"=="5" (
    echo.
    echo Launching LilithOS...
    echo.
    if exist "..\LilithOS\lilithos.conf" (
        start "" "..\LilithOS\launch_lilithos.bat"
    ) else (
        echo LilithOS not found!
        echo Please install LilithOS first.
    )
    pause
) else if "%choice%"=="6" (
    echo.
    echo Installation Logs:
    echo.
    if exist "%~dp0atmosphere_installer\install_log.txt" (
        type "%~dp0atmosphere_installer\install_log.txt"
    ) else (
        echo No installation logs found.
    )
    echo.
    if exist "%~dp0atmosphere_installer\test_log.txt" (
        echo Test Logs:
        type "%~dp0atmosphere_installer\test_log.txt"
    )
    pause
) else if "%choice%"=="7" (
    echo.
    echo Exiting...
    exit
) else (
    echo.
    echo Invalid option! Please try again.
    pause
    goto :eof
)

echo.
echo Operation completed!
pause
"@
    
    $launcherFile = Join-Path $launcherPath "enhanced_launcher.bat"
    $enhancedLauncher | Out-File -FilePath $launcherFile -Encoding ASCII
    Write-ColorOutput "Created enhanced launcher" "Green"
}

function Generate-EnhancedReport {
    param([string]$Drive, [string]$LocalDir)
    
    Write-Section "Generating Enhanced Integration Report"
    
    $reportDir = Join-Path $LocalDir "integration_reports"
    if (-not (Test-Path $reportDir)) {
        New-Item -ItemType Directory -Path $reportDir -Force | Out-Null
    }
    
    $reportPath = Join-Path $reportDir "enhanced_tricky_doors_integration_report_$(Get-Date -Format 'yyyyMMdd_HHmmss').md"
    
    $report = @"
# Enhanced Tricky Doors + Atmosphere Integration Report
Generated by LilithOS Enhanced Integration Script

## Integration Information
- Integration Date: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
- Switch Model: $SWITCH_MODEL
- Tegra Chip: $TEGRA_CHIP
- Atmosphere Version: $ATMOSPHERE_VERSION
- Hekate Version: $HEKATE_VERSION
- Target Drive: $Drive
- Local Directory: $LocalDir

## Enhanced Integration Components

### Save File Trigger System
- Directory: $Drive\switch\TrickyDoors\save_monitor
- Save File Monitor: save_monitor.bat
- Trigger Configuration: save_file_trigger.conf
- Status: Active

### Enhanced Atmosphere Auto-Installer
- Directory: $Drive\switch\TrickyDoors\atmosphere_installer
- Enhanced Installer: enhanced_install_atmosphere.bat
- Test Mode Installer: test_installer.bat
- Launch Hook: enhanced_launch_hook.bat
- Status: Deployed

### Enhanced Launcher Application
- Main Launcher: enhanced_launcher.bat
- Save File Trigger: Enabled
- Test Mode: Available
- Logging: Enabled
- Status: Created

## How Enhanced Integration Works
1. User launches Tricky Doors via enhanced launcher
2. Save file monitor starts in background
3. When save file is loaded, trigger activates
4. Atmosphere installer automatically launches
5. CFW installation completes with logging
6. User can boot into Atmosphere CFW

## Test Mode Features
- Simulate save file load trigger
- Test installation process
- Generate test logs
- Validate integration

## Usage Instructions
1. Run enhanced_launcher.bat from Tricky Doors directory
2. Select option 1 for save file trigger mode
3. Or select option 2 to test the trigger
4. Load save file in Tricky Doors to trigger installation
5. Follow on-screen instructions

## Next Steps
1. Insert SD card into Switch
2. Boot into RCM mode
3. Inject Hekate payload
4. Select CFW (sysMMC) or CFW (emuMMC)
5. Enjoy Tricky Doors with auto-installed Atmosphere CFW!

---
Report generated by LilithOS Enhanced Integration Script v$SCRIPT_VERSION
"@
    
    $report | Out-File -FilePath $reportPath -Encoding UTF8
    Write-ColorOutput "Enhanced integration report generated: $reportPath" "Green"
    
    return $reportPath
}

# Main execution
Write-Header "Enhanced Tricky Doors + Atmosphere Auto-Launcher v$SCRIPT_VERSION"

if (Test-Path $DriveLetter) {
    
    Setup-EnhancedIntegration -Drive $DriveLetter
    Create-SaveFileMonitor -Drive $DriveLetter
    Create-EnhancedAtmosphereInstaller -Drive $DriveLetter
    Create-EnhancedLauncher -Drive $DriveLetter
    $reportPath = Generate-EnhancedReport -Drive $DriveLetter -LocalDir $LocalSwitchOS
    
    Write-Header "Enhanced Integration Summary"
    Write-ColorOutput "Enhanced Tricky Doors + Atmosphere integration completed!" "Green"
    Write-ColorOutput "Target Drive: $DriveLetter" "Cyan"
    Write-ColorOutput "Enhanced Integration Report: $reportPath" "Cyan"
    Write-ColorOutput "Atmosphere will auto-install when save file is loaded" "Cyan"
    Write-ColorOutput "Test mode available for validation" "Cyan"
    
} else {
    Write-ColorOutput "Enhanced integration failed - drive $DriveLetter not accessible" "Red"
}

Write-ColorOutput "`nHappy modding with Enhanced Tricky Doors + Atmosphere!" "Magenta" 